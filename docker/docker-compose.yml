version: '3'
#networks:
#  frontendnet:

services:
  php-fpm:
    build:
      context: ./php-fpm
    volumes:
      - ../src:/var/www
  nginx:
    image: jwilder/nginx-proxy
    volumes:
      # It needs to access Docker's API, so we mount the Unix socket
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    # Listens on port 80, accessed by our host on http://localhost
    ports:
      - "8080:80"
  web:
    build:
      context: ./apache2
    depends_on:
      - database
      # Our web depends on nginx too
      - nginx
    environment:
      # Image requirement, the virtual host name it will listen too
      # The virtual host is a group of hosts, containers or anything that responds HTTP
      VIRTUAL_HOST: 'localhost'
    volumes:
      - ../src:/var/www
      - ./apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./apache2/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf

#  nginx:
#    build:
#      context: ./nginx
#    volumes:
#      - ../src:/var/www
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/sites/:/etc/nginx/sites-available
#      - ./nginx/conf.d/:/etc/nginx/conf.d
#    depends_on:
#      - php-fpm
#    ports:
#      - "8080:80"
#      - "8443:443"
#    networks:
#      frontendnet:
#        aliases:
#          - localweb
#  apache2:
#    build:
#      context: ./apache2
#    volumes:
#      - ../src:/var/www
#      - ./apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
#      - ./apache2/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
#    depends_on:
#      - php-fpm
#    ports:
#      - "8080:80"
#      - "8443:443"
#    networks:
#      frontendnet:
#        aliases:
#          - localweb
  database:
    build:
      context: ./database
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=docker
    volumes:
      - ./database/data.sql:/docker-entrypoint-initdb.d/data.sql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    restart: always
    ports:
      - 8082:80
    volumes:
      - /sessions
